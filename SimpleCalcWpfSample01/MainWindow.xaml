<Window x:Class="SimpleCalcWpfSample01.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SimpleCalcWpfSample01"
        mc:Ignorable="d"
        Title="SimpleCalcWpfSample01"
        Height="200" Width="500" MaxHeight="300" MaxWidth="700" MinHeight="150" MinWidth="450">
    <Window.DataContext>
        <!--DataContextにViewModelを設定-->
        <local:MainViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <!--計算結果を計算して表示するためのMultiConverterを設定-->
        <local:ResultMultiConverter x:Key="resMulCon"/>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <!--計算エリアとボタンエリアに分割-->
            <RowDefinition Height="*"/>
            <RowDefinition Height="2*"/>
        </Grid.RowDefinitions>

        <!--ボタンエリア-->
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <!--今後ボタンを増やす時のために枠を４つ用意-->
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!--リセットボタン-->
            <Button x:Name="_btnReset" Grid.Column="0" Content="リセット" Width="80" Height="30"
                    Command="{Binding ResetCommand}" Focusable="False"/>
        </Grid>
        
        <!--計算エリア-->
        <Grid Grid.Row="1" HorizontalAlignment="Center">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            
            <!--
            ▼備考
            "d:"から始まるプロパティはデザイン画面だけに反映されて、実行時には無視される特別なプロパティ
            見た目の確認だけしたいときに便利
            -->
            
            <!--被演算子（左）-->
            <TextBox x:Name="_txtOperandLeft" Grid.Column="0" Margin="0,0,10,0" Width="100" Height="30"
                     FontSize="18" TextAlignment="Right" d:Text="1000"
                     Text="{Binding OperandLeft, UpdateSourceTrigger=LostFocus, TargetNullValue='', StringFormat='{}{0:#,0.#######}'}"
                     PreviewTextInput="_txtOperand_PreviewTextInput" KeyDown="Control_KeyDown"/>
            
            <!--演算子コンボボックス-->
            <ComboBox x:Name="_cmbOperator" Grid.Column="1" Margin="0,0,10,0" Width="50" Height="30"
                      FontSize="18" ItemsSource="{Binding OperatorList}"
                      SelectedIndex="{Binding OperatorIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      d:SelectedIndex="0" KeyDown="Control_KeyDown">
                <d:ComboBoxItem>
                    <TextBlock Text="＋"/>
                </d:ComboBoxItem>
            </ComboBox>
            
            <!--被演算子（右）-->
            <TextBox x:Name="_txtOperandRight" Grid.Column="2" Margin="0,0,10,0" Width="100" Height="30"
                     FontSize="18" TextAlignment="Right" d:Text="2000"
                     Text="{Binding OperandRight, UpdateSourceTrigger=LostFocus, TargetNullValue='', StringFormat='{}{0:#,0.#######}'}"
                     PreviewTextInput="_txtOperand_PreviewTextInput" KeyDown="Control_KeyDown"/>
            
            <!--イコール-->
            <Label Grid.Column="3" Margin="0,0,10,0" Padding="0" Height="30" Content="=" FontSize="18"/>
            
            <!--計算結果-->
            <TextBox x:Name="_txtAnswer" Grid.Column="4" Width="100" Height="30"
                     FontSize="18" d:Text="3000" TextAlignment="Right" KeyDown="Control_KeyDown">
                <TextBox.Text>
                    <MultiBinding Converter="{StaticResource resMulCon}" Mode="OneWay" StringFormat="{}{0:#,0.#######}">
                        <Binding Path="OperandLeft"/>
                        <Binding Path="OperandRight"/>
                        <Binding Path="OperatorIndex"/>
                    </MultiBinding>
                </TextBox.Text>
            </TextBox>
        </Grid>
    </Grid>
</Window>
